// Updated on 2017-05-29 by lom
// Все пины теперь в одном месте, кроме нестандартных версий

// Контроль нуля идет на 1-е прерывание (это pin 3)
// Управление симистором для фазового регулятора мощности реализовано через PIN 36
// АЦП от трансформатора подключен на pin А2
// Датчики ds18b20 сидят на 37 пине.
// Пины с 7 по 13 можно освободить для использования встроенного ШИМ-а в Ардуино (тут надо быть внимательнее с таймерами!)

// Почему-то иногда глючит дисплей - когда это происходит (на нем появляются иероглифы или перестает отображаться текст),
// нажать и держать одновременно клавишу влево и впрёаво, либо клавишей вправо перейти на 6-ю страницу, дисплей переинициализируется.
// одновременное нажатие кнопок вверх и вних позволчет перейти к следующему этапу процесса ректификации , также можно сделать это на 8 странице кнопками вверх и вниз однако это не рекомендуется работа не гаранитируется.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Аналоговые выходы
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#define PIN_LCD_KEYPAD A0 // Сюда подключаем кнопки от стандартного shield-a
// #define PIN_MPX5010       A1    		// SIMPLED_VERSION = 5-20
#define PIN_READU A2 // Аналоговый Пин для чтения напряжения
#define NPG_UROVEN_PIN A3 // Пин уровня НПГ                                                                                              \
    // NB! До v3.70, если не было датчика уровня NPG_UROVEN_PIN должен был быть закомментирован \
    // Для общего порядка, теперь есть параметр USE_NPG_UROVEN_SENSORS, его и используем
#define PIN_READI A4 // Пин для чтения тока
#define PIN_ALARM_VODA A5 // Пин, на котором сидит датчик разлития воды на полу (да какой датчик, два луженых провода).
#define PIN_ALARM_UROVEN A6 // Пин, на котором сидит датчик уровня в приемной емкости (да какой датчик, два луженых провода).
#define PIN_PROVODIMOST_SR A7 // Пин для анализа проводимости спирта (аналоговый пин А7)
#define PIN_GAS_SENSOR A8 // Пин для анализа датчика загазованности (спирта)
#define PIN_MPX5010 A9 // Пин датчика давления MPX5010DP

// Уровень НПГ подключен по следующей схеме:
//    Подтяджка - 10 ком, защита -330 ом, замыкание - 30,
//    резистор 1.1К (верхниц уровень) - 128, 2.2К (рабочий уровень) - 256, 3,3К (нижний уровень)-266

// Эти пины пересекаются с датчиками газа и давления
#if NUM_PHASE == 1
//  #define NPG_UROVEN_PIN_MIN  A8         // Пин уровня НПГ. (закомментировать, если НПГ не используется во избежании ложных сработок)
//  #define NPG_UROVEN_PIN_WORK A9         // Пин уровня НПГ. (закомментировать, если НПГ не используется во избежании ложных сработок)
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Цифровые выходы
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// #define PIN_DS18B20        2       // SIMPLED_VERSION = 5-20
#define PIN_ZERO_DETECT 3 // Детектор нуля
// #define PIN_TRIAC          10      // SIMPLED_VERSION = 5-20    // Тут уже путанница с пинами
#define PIN_LIGHT 10 // Тут можно лампочками поморгать
#define PIN_SOUND 11 // На 11 пине сидит спикер от компа (мощная штука, 15 ом, потребляет 300ма, поэтому ей пока не злоупотребляю, может заменить ее в дальнейшем на Пьезо?)
#define PIN_NASOS_NBK 12 // Пин управления насосом НБК через ШИМ (двигатель не шаговый, подключать полевик, например IRL2703 или транзисторный ключ или драйвер полевика).
#define PIN_KLP_BEG 22 // 22-27  // Начальный пин для управления клапанами
#define PIN_TERMOSTAT_ON 28 // Пин термостата, который включается при превышении температуры
#define PIN_TERMOSTAT_OFF 29 // Пин термостата, который отключается при превышении температуры
#define PIN_RZG_ON 30 // Пин для включения режима разгона (может работать и без него)
#define PIN_ALL_OFF 31 // Пин, при подаче напряжения на который вырубаеся вообще все (например выключается УЗО) (может работать и без него)
// #define PIN_ALL_OFF       32       // SIMPLED_VERSION >= 30    // Тут уже путанница с пинами
#define PIN_MIXER 32 // Пин управления мешалкой
#define PIN_NASOS_NBK_BRD 33 // Пин управления насосом бардоотводчика НБК через ШИМ (двигатель не шаговый, подключать полевик, например IRL2703 или транзисторный ключ или драйвер полевика).
// #define PIN_RZG_ON        34       // SIMPLED_VERSION >= 30    // Тут уже путанница с пинами
#define PIN_DVIGATEL 34 // Пин управления двигателем в фазовом режиме (не используется!).
#define PIN_TRIAC 36 // 36    // Управление симистором реализовано через PIN 36
#define PIN_DS18B20 37 // 37    // Тут у нас подключены датчики
// #define PIN_MIXER         38       // SIMPLED_VERSION >= 30    // Тут уже путанница с пинами
#define PIN_SLAVE_0 38 // Пины управления SLAVE контроллером, или управления от MASTER контроллера
#define PIN_SLAVE_1 39
#define PIN_SLAVE_2 40
#define PIN_SLAVE_3 41
#define PIN_RST_WDT 35 // Пин, на который периодически меняется значение с 0 на 1 (раз в 5 секунд обычно) служит для отслеживаения зависания Ардуины внешним устройством.

#if USE_LCD_KEYPAD_SHIELD
#define PIN_START_1 53 // На этих двух пинах устанавливается заданный уровень при старте процесса и снимается при окончкни нагрева для включения индукционки через реле, например)
#define PIN_START_2 51 // Это пины стандратного шильда, если у Вас другой шильд, то поменять значения.
#if !USE_I2C_LCD
#define PIN_LCD_RS 8
#define PIN_LCD_EN 9
#define PIN_LCD_D4 4
#define PIN_LCD_D5 5
#define PIN_LCD_D6 6
#define PIN_LCD_D7 7
#endif //   !USE_I2C_LCD
#else
#define PIN_START_1 4 // На этих двух пинах устанавливается заданный уровень при старте процесса и снимается при окончании нагрева
#define PIN_START_2 5 // для включения индукционки через реле, например

#if !USE_I2C_LCD
#define PIN_LCD_D7 42
#define PIN_LCD_D6 44
#define PIN_LCD_D5 46
#define PIN_LCD_D4 48
#define PIN_LCD_EN 50
#define PIN_LCD_RS 52
#endif //   !USE_I2C_LCD
// Пины, на которых сидят кнопки
// почему на этих - да потому, что они рядом идут, и еще пин земли рядом, а гребенку 6 онтактов проще паять и подключать, чем каждый контакт одтельно
#define PIN_UP 45
#define PIN_DOWN 47
#define PIN_LEFT 49
#define PIN_RIGHT 51
#define PIN_SELECT 53
#endif
